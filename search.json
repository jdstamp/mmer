[{"path":"https://lcrawlab.github.io/mmer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 mmer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/mmer.html","id":"run-mme-with-plink-data","dir":"Articles","previous_headings":"","what":"Run MME with PLINK data","title":"How To Use the Multimodal Marginal Epistasis Test","text":"","code":"library(mmer) library(dplyr) library(ggplot2)"},{"path":"https://lcrawlab.github.io/mmer/articles/mmer.html","id":"data-requirements-and-file-formats","dir":"Articles","previous_headings":"Run MME with PLINK data","what":"Data Requirements and File Formats","title":"How To Use the Multimodal Marginal Epistasis Test","text":"MME implemented R requires genetic data PLINK format, consists three files: - .bim: Contains SNP information - .bed: Contains genetic data - .fam: Contains sample information Additionally, phenotype (trait) data separate file following PLINK’s phenotype format. mme() function includes parameters let control memory usage computational resources. detailed guidance optimizing settings system, please see tutorial Optimize Memory Requirements MME.","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/mmer.html","id":"specifying-snps-for-analysis","dir":"Articles","previous_headings":"Run MME with PLINK data","what":"Specifying SNPs for Analysis","title":"How To Use the Multimodal Marginal Epistasis Test","text":"selecting SNPs analyze, must provide positions 1-based indices. indices correspond row numbers .bim file, first SNP index 1, second index 2, . complete details function parameters, please refer documentation mme() function. analysis uses simulated data demonstration purposes. like learn created data, please refer tutorial Simulate Traits.","code":"# File inputs plink_file <- \"path/to/plink/file\" pheno_file <- \"path/to/pheno/file\" mask_file <- \"path/to/mask/file\"  # Parameter inputs chun_ksize <- 10 n_randvecs <- 10 n_blocks <- 10 n_threads <- 5  # 1-based Indices of SNPs to be analyzed n_snps <- 100 snp_indices <- 1:n_snps  mme_result <- mme(   plink_file,   pheno_file,   mask_file,   snp_indices,   chunk_size,   n_randvecs,   n_blocks,   n_threads )"},{"path":"https://lcrawlab.github.io/mmer/articles/mmer.html","id":"understanding-the-results","dir":"Articles","previous_headings":"Run MME with PLINK data","what":"Understanding the Results","title":"How To Use the Multimodal Marginal Epistasis Test","text":"call mme() function, returns list containing multiple elements. important one called summary, contains main analysis results. results formatted tidy data, making compatible popular R packages like ggplot2 dplyr analysis visualization.","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/mmer.html","id":"visualizing-genomic-associations","dir":"Articles","previous_headings":"Run MME with PLINK data","what":"Visualizing Genomic Associations","title":"How To Use the Multimodal Marginal Epistasis Test","text":"use Manhattan plots visualize genome-wide analyses effectively highlight strong associations genetic variants traits. case, Manhattan plot specifically shows statistical epistasis (interactions genes). reference, ’ve marked true causal SNPs (Single Nucleotide Polymorphisms) green plot - genetic variants included simulation real effects.","code":"mme_result$summary %>%   ggplot(aes(   x = index,   y = -log10(p),   color = true_gxg_snp )) +   geom_point() +   xlab(\"Position\") +   labs(color = \"Epistatic SNP\")"},{"path":"https://lcrawlab.github.io/mmer/articles/mmer.html","id":"understanding-variance-components-and-effect-sizes","dir":"Articles","previous_headings":"Run MME with PLINK data","what":"Understanding Variance Components and Effect Sizes","title":"How To Use the Multimodal Marginal Epistasis Test","text":"MME estimates much total trait variation can explained genetic interactions. simulation, set Phenotypic Variance Explained (PVE) 5% SNP involved epistatic interactions. plot shows well method recovered effects. displays two distributions: estimated PVE SNPs know truly involved epistatic interactions estimated PVE SNPs real epistatic effects dashed line marks true 5% PVE level used simulation, allowing see accurately method estimated actual effect sizes.","code":"mme_result$summary %>%   ggplot(aes(x = true_gxg_snp, y = pve, fill = true_gxg_snp)) +   geom_boxplot() +   geom_hline(yintercept = 0.05, color = \"grey40\", linetype = \"dashed\") +   xlab(\"Epistatic SNP\") +   ylab(\"Phenotypic Variance Explained\") +   theme(legend.position = \"none\")"},{"path":"https://lcrawlab.github.io/mmer/articles/mmer.html","id":"narrow-sense-heritability-estimates","dir":"Articles","previous_headings":"Run MME with PLINK data","what":"Narrow Sense Heritability Estimates","title":"How To Use the Multimodal Marginal Epistasis Test","text":"MME method uses linear mixed model separate different sources trait variation. One key component estimates narrow sense heritability (h2h^2), measures much trait variation can explained additive genetic effects. plot breaks estimated sources trait variation: “grm”: Shows narrow sense heritability (h2h^2) “gxg”: Shows variance due gene--gene interactions “error”: Shows unexplained variance, environmental effects simulation, set true narrow sense heritability 30%, shown dashed line plot. reference line helps evaluate accurately MME estimated genetic components trait variation.","code":"mme_result$vc_estimate %>%   ggplot(aes(x = component, y = vc_estimate, fill = component)) +   geom_boxplot() +   geom_hline(yintercept = 0.3, color = \"grey40\", linetype = \"dashed\") +   xlab(\"Component\") +   ylab(\"Variance Component Estimate\") +   theme(legend.position = \"none\")"},{"path":[]},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-cite-us.html","id":"the-multimodal-marginal-epistasis-test-mme","dir":"Articles","previous_headings":"","what":"The Multimodal Marginal Epistasis Test (MME)","title":"How To Cite Our Work","text":"Stamp J, Pattilo-Smith S, Weinreich D & Crawford L (2024). Integration functional genomic maps enables genome-wide detection epistasis human complex traits. bioRXiv. Stamp J & Crawford L (2024). mmer: Multimodal Marginal Epistasis Test. https://github.com/lcrawlab/mmer, https://lcrawlab.github.io/mmer/","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-cite-us.html","id":"the-marginal-epistasis-test-mapit","dir":"Articles","previous_headings":"","what":"The Marginal Epistasis Test (MAPIT)","title":"How To Cite Our Work","text":"Crawford L, Zeng P, Mukherjee S, & Zhou X (2017). Detecting epistasis marginal epistasis test genetic mapping studies quantitative traits. PLoS genetics, 13(7), e1006869. https://doi.org/10.1371/journal.pgen.1006869","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-cite-us.html","id":"the-multivariate-marginal-epistasis-test-mvmapit","dir":"Articles","previous_headings":"","what":"The multivariate Marginal Epistasis Test (mvMAPIT)","title":"How To Cite Our Work","text":"Stamp J, DenAdel , Weinreich D, Crawford, L (2023). Leveraging Genetic Correlation Traits Improves Detection Epistasis Genome-wide Association Studies. G3 Genes|Genomes|Genetics 13(8), jkad118; doi: https://doi.org/10.1093/g3journal/jkad118 Stamp J, Crawford L (2022). mvMAPIT: Multivariate Genome Wide Marginal Epistasis Test. https://github.com/lcrawlab/mvMAPIT, https://lcrawlab.github.io/mvMAPIT/","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-create-mask-file.html","id":"mask-file-format","dir":"Articles","previous_headings":"","what":"Mask File Format","title":"How To Create a Mask File","text":"mme() function expects mask data HDF5 file. HDF5 format includes two primary object types: Datasets - typed multidimensional arrays Groups - container structures can hold datasets groups","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-create-mask-file.html","id":"mask-format-requirements","dir":"Articles","previous_headings":"","what":"Mask Format Requirements","title":"How To Create a Mask File","text":"mask data organized following groups datasets: Groups: ld: Contains SNPs linkage disequilibrium (LD) focal SNP, excluded. gxg: Contains indices SNPs used condition marginal epistasis test, included. required group names can configured input parameters mme(). defaults ld gxg. Datasets: ld/<j>: focal SNP <j>, dataset contains indices SNPs LD block SNP. SNPs excluded gene--gene interaction covariance matrix. gxg/<j>: focal SNP <j>, dataset contains indices SNPs include gene--gene interaction covariance matrix focal SNP <j>. Important: indices mask file must zero-based correspond zero-based row indices PLINK .bim file. includes dataset index (<j> gxg/<j>) data . zero-based indexing necessary mask data read C++ subroutine mme(), uses zero-based indexing, unlike R’s one-based indexing SNP indices function call.","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-create-mask-file.html","id":"creating-and-using-mask-files","dir":"Articles","previous_headings":"","what":"Creating and Using Mask Files","title":"How To Create a Mask File","text":"package provides utility functions create, write, read valid mask files mme(). can check data written correctly.","code":"hdf5_file <- tempfile()  # Group names gxg_h5_group <- \"gxg\" ld_h5_group <- \"ld\"  # Data (still in 1-based R indexing) include_gxg_snps <- 1:10 exclude_ld_snps <- 5:6  # Focal SNP (still in 1-based R indexing) focal_snp <- 4  # Dataset names dataset_name_pattern <- \"%s/%s\" gxg_dataset <- sprintf(dataset_name_pattern, gxg_h5_group, focal_snp - 1) # 0-based index! ld_dataset <- sprintf(dataset_name_pattern, ld_h5_group, focal_snp - 1) # 0-based index!  # Create an empty HDF5 file create_hdf5_file(hdf5_file)  # Write LD data write_hdf5_dataset(hdf5_file, ld_dataset, exclude_ld_snps - 1) # 0-based index!  # Write GXG data write_hdf5_dataset(hdf5_file, gxg_dataset, include_gxg_snps - 1) # 0-based index! ld_read <- read_hdf5_dataset(hdf5_file, ld_dataset) gxg_read <- read_hdf5_dataset(hdf5_file, gxg_dataset)  print(sprintf(\"Zero-based indices of SNPs to exclude: %s\", str(ld_read))) #>  int [1:2] 4 5 #> character(0) print(sprintf(\"Zero-based indices of SNPs to include: %s\", str(gxg_read))) #>  int [1:10] 0 1 2 3 4 5 6 7 8 9 #> character(0)"},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-memory-optimization.html","id":"genotype-data-size-and-number-of-blocks","dir":"Articles","previous_headings":"","what":"Genotype Data Size and Number of Blocks","title":"How To Optimize the Memory Requirements of MME","text":"sample size primary factor influencing memory requirements. phenotype genotype data need loaded memory computation. large datasets, like Biobank-scale data (350k samples 500k SNPs), loading entire dataset memory requires 1.4TB (assuming double precision data matrix), exceeds machines’ capacities. manage large datasets efficiently, mme() reads genotype data smaller blocks. parameter n_blocks controls number blocks. instance, 500k SNPs, setting n_blocks = 100 load 5000 SNPs memory time, reducing memory load allowing computations proceed block block.","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-memory-optimization.html","id":"number-of-random-vectors","dir":"Articles","previous_headings":"","what":"Number of Random Vectors","title":"How To Optimize the Memory Requirements of MME","text":"mme() function uses stochastic trace estimator approximate trace matrix products efficiently. number random vectors impacts accuracy trace estimates memory computational efficiency. blockwise computation, algorithm stores intermediate matrices sized sample_size x n_randvecs. Increasing number random vectors improves accuracy also increases memory usage computation time. Typically, using around 10 random vectors provides reasonably accurate results.","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-memory-optimization.html","id":"number-of-snps-sharing-random-vectors","dir":"Articles","previous_headings":"","what":"Number of SNPs Sharing Random Vectors","title":"How To Optimize the Memory Requirements of MME","text":"chunk_size parameter controls many SNPs share set random vectors, enhancing efficiency genome-wide data processing. method reduces redundant calculations genetic relatedness covariance matrix minimizes time spent reading genotype data memory. set SNPs analyzed together (“chunk”), intermediate results must stored. Consequently, memory requirement grows chunk size, calculated : chunk_size x (sample_size x n_randvecs). Schematic overview illustrating compuational speedup resulting sharing random vectors. () randomized trace estimates can identify reusable matrix vector products. Computing exact trace product two covariance matrices prohibitively computationally expensive. Instead, multimodal marginal epistasis (MME) test approximates traces using random vectors zz. full MQS computation point estimates variance components, see matrix--vector products form AzAz ∈{K,G}\\\\{K, G\\} appear repeatedly. (b) genetic relatedness matrix KK focal SNPs. Using unique random vectors computation every focal SNP, compute quantity repeatedly. Computing matrix--vector products KzKz constitutes almost half computation time point estimates. (c) sharing random vectors zz focal SNPs, computing KzKz can done focal SNPs share random vectors. , computation time KzKz becomes negligible.","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-memory-optimization.html","id":"genotype-masking-for-the-gene-by-gene-interaction-covariance","dir":"Articles","previous_headings":"","what":"Genotype Masking for the Gene-by-Gene Interaction Covariance","title":"How To Optimize the Memory Requirements of MME","text":"Masking genotypes contribute epistasis can help reduce memory usage computation time. masked, genotypes need stored memory, significantly decreasing memory requirements. Note approximate_memory_requirements() function account reduction.","code":""},{"path":"https://lcrawlab.github.io/mmer/articles/tutorial-memory-optimization.html","id":"explore-the-memory-requirements","dir":"Articles","previous_headings":"","what":"Explore the Memory Requirements","title":"How To Optimize the Memory Requirements of MME","text":"estimate memory needs based chosen parameters, use approximate_memory_requirements() function. function helps determine planned settings fit within available memory identify parameters can adjusted meet resource constraints. parameters n_blocks, n_randvecs, chunk_size particularly flexible significant impact memory usage.","code":"n_samples <- c(350000) n_snps <- c(500000) n_blocks <- c(1, 100, 1000) n_randvecs <- c(10, 100) chunk_size <- c(10, 100)  parameters <- crossing(   n_samples = n_samples,   n_snps = n_snps,   n_blocks = n_blocks,   n_randvecs = n_randvecs,   chunk_size = chunk_size )   estimated_memory <- parameters %>%   mutate(memory_gb = round(     approximate_memory_requirements(n_samples,                                      n_snps,                                      n_blocks,                                      n_randvecs,                                      chunk_size),     2   ))  kable(estimated_memory)"},{"path":"https://lcrawlab.github.io/mmer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julian Stamp. Maintainer, author. Lorin Crawford. Author.","code":""},{"path":"https://lcrawlab.github.io/mmer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stamp J, Crawford L (2024). mmer: Multimodal Marginal Epistasis Test. R package version 0.0.1.","code":"@Manual{,   title = {mmer: The Multimodal Marginal Epistasis Test},   author = {Julian Stamp and Lorin Crawford},   year = {2024},   note = {R package version 0.0.1}, }"},{"path":"https://lcrawlab.github.io/mmer/index.html","id":"the-multimodal-marginal-epistasis-test-","dir":"","previous_headings":"","what":"The Multimodal Marginal Epistasis Test","title":"The Multimodal Marginal Epistasis Test","text":"mmer package implements computationally statistically efficient method detecting marginal epistasis genome-wide association studies (GWAS). Find full package documentation including examples articles : Multimodal Marginal Epistasis test Documentation.","code":""},{"path":"https://lcrawlab.github.io/mmer/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"The Multimodal Marginal Epistasis Test","text":"Hutchinson’s stochastic trace estimator: efficient scalable computation Mailman algorithm: fast vector--matrix operation Linear mixed model: controls population structure Multimodal Input: incorporates additional data HDF5 files improve power detecting gene--gene interactions. Optimize Memory Constraints: Highly configurable block wise processing data allows make available resources. See also Optimize Memory Requirements MME. Parallelization: Utilizes OpenMP multi-threaded processing.","code":""},{"path":"https://lcrawlab.github.io/mmer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"The Multimodal Marginal Epistasis Test","text":"can install development version mmer GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"lcrawlab/mmer\")"},{"path":"https://lcrawlab.github.io/mmer/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"The Multimodal Marginal Epistasis Test","text":"System requirements package: GNU make R (>= 2.10) OpenMP (optional) package depends one package BioConductor: Rhdf5lib. dependency can installed first installing tool BiocManager CRAN, subsequently installing library tool. full list R dependencies can found DESCRIPTION file.","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(\"Rhdf5lib\")"},{"path":"https://lcrawlab.github.io/mmer/index.html","id":"openmp","dir":"","previous_headings":"Dependencies","what":"OpenMP","title":"The Multimodal Marginal Epistasis Test","text":"OS X Linux, OpenMP library can installed via one (shell) commands specified : enable openMP, may necessary configure compiler flag SHLIB_OPENMP_CXXFLAGS ~/.R/Makevars file.","code":""},{"path":"https://lcrawlab.github.io/mmer/index.html","id":"known-issues","dir":"","previous_headings":"","what":"Known Issues","title":"The Multimodal Marginal Epistasis Test","text":"Compiling package requires compiler find libraries dependencies. unix systems, libraries typically installed /usr/local/lib /usr/local/include. users using OS X homebrew, libraries typically installed /opt/homebrew/lib /opt/homebrew/include. Non-standard library paths need configured. src/Makevars file configures compiler flags considers LDFLAGS CPPFLAGS ~/.R/Makevars file.","code":""},{"path":"https://lcrawlab.github.io/mmer/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"The Multimodal Marginal Epistasis Test","text":"Stamp J, Crawford L (2024). mvMAPIT: Multivariate Genome Wide Marginal Epistasis Test. R package version 2.0.3, https://lcrawlab.github.io/mvMAPIT/, https://github.com/lcrawlab/mvMAPIT. Stamp et al. (2023): Leveraging genetic correlation traits epistasis detection GWAS. G3: Genes, Genomes, Genetics. Fu, B., Pazokitoroudi, ., Xue, ., Anand, ., Anand, P., Zaitlen, N., & Sankararaman, S. (2023). biobank-scale test marginal epistasis reveals genome-wide signals polygenic epistasis. bioRxiv. Crawford et al. (2017): Detecting epistasis marginal epistasis test. PLoS Genetics. Devresse et al. (2024): HighFive - Header-C++ HDF5 interface. https://zenodo.org/records/13120799","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/approximate_memory_requirements.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Memory Requirements for MME Routine — approximate_memory_requirements","title":"Estimate Memory Requirements for MME Routine — approximate_memory_requirements","text":"function provides approximate estimate memory requirements (gigabytes) running Multimodal Marginal Epistasis (MME) routine based input parameters number samples, SNPs, configurations.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/approximate_memory_requirements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Memory Requirements for MME Routine — approximate_memory_requirements","text":"","code":"approximate_memory_requirements(   n_samples,   n_snps,   n_blocks,   n_randvecs,   chunksize )"},{"path":"https://lcrawlab.github.io/mmer/reference/approximate_memory_requirements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Memory Requirements for MME Routine — approximate_memory_requirements","text":"n_samples Integer. number samples dataset. n_snps Integer. total number SNPs dataset. n_blocks Integer. number genotype blocks used partition SNPs. Affects size encoded genotype segments. n_randvecs Integer. number random vectors used stochastic trace estimation. Affects memory operations involving random vectors. chunksize Integer. number focal SNPs processed per chunk.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/approximate_memory_requirements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Memory Requirements for MME Routine — approximate_memory_requirements","text":"Numeric. approximate memory requirement (gigabytes) MME routine.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/approximate_memory_requirements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Memory Requirements for MME Routine — approximate_memory_requirements","text":"function calculates memory usage summing contributions various components used MME routine, including: Variance component estimates (vc_estimates) Phenotype-related matrices Random vector-based computations Genotype objects block statistics Gene--gene interaction masks estimated memory requirement derived data dimensions operational needs, provides guideline configuring resources analysis.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/approximate_memory_requirements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Memory Requirements for MME Routine — approximate_memory_requirements","text":"","code":"n_samples <- 1e5 n_snps <- 1e6 n_blocks <- 100 n_randvecs <- 100 chunksize <- 10 approximate_memory_requirements(n_samples, n_snps, n_blocks, n_randvecs, chunksize) #> [1] 6.447136"},{"path":"https://lcrawlab.github.io/mmer/reference/create_hdf5_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an HDF5 File — create_hdf5_file","title":"Create an HDF5 File — create_hdf5_file","text":"function creates new, empty HDF5 file specified location.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/create_hdf5_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an HDF5 File — create_hdf5_file","text":"","code":"create_hdf5_file(hdf5_file)"},{"path":"https://lcrawlab.github.io/mmer/reference/create_hdf5_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an HDF5 File — create_hdf5_file","text":"hdf5_file character string specifying path name HDF5 file created.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/create_hdf5_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an HDF5 File — create_hdf5_file","text":"return value; function creates HDF5 file specified location.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/create_hdf5_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an HDF5 File — create_hdf5_file","text":"","code":"if (FALSE) { # \\dontrun{ # Create an empty HDF5 file create_hdf5_file(\"example.h5\") } # }"},{"path":"https://lcrawlab.github.io/mmer/reference/getting_started.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Dataset for Genome-Wide Interaction Analysis — getting_started","title":"Simulated Dataset for Genome-Wide Interaction Analysis — getting_started","text":"getting_started simulated dataset created demonstrate use mme() function genome-wide interaction analyses. contains results simulated analysis involving additive genetic effects gene--gene (GxG) interactions.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/getting_started.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Dataset for Genome-Wide Interaction Analysis — getting_started","text":"","code":"data(\"getting_started\")"},{"path":"https://lcrawlab.github.io/mmer/reference/getting_started.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Dataset for Genome-Wide Interaction Analysis — getting_started","text":"list results mme(), including following components: summary data frame summarizing analysis results, including p-values SNP associations (p). pve data frame containing per SNP variance component estimates normalized phenotypic variance explained (PVE). vc data frame containing per SNP variance component estimates. gxg_snps vector containing indices SNPs assigned epistatic interactions trait simulations.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/getting_started.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated Dataset for Genome-Wide Interaction Analysis — getting_started","text":"data-raw/getting_started.R","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/getting_started.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated Dataset for Genome-Wide Interaction Analysis — getting_started","text":"dataset generated follows: Genotype Simulation: Genotype data 5000 individuals 6,000 SNPs simulated synthetic allele counts. Phenotype Simulation: Phenotypic values simulated additive heritability 0.3 GxG interaction heritability 0.25. set 100 SNPs selected additive effects, two groups 5 SNPs used GxG interactions. PLINK-Compatible Files: simulated data saved PLINK-compatible .bed, .fam, .bim files. Interaction Analysis: mme() function used perform genome-wide interaction analyses subset SNP indices, including GxG SNP groups 100 additional additive SNPs. Memory-efficient computation parameters (e.g., chun_ksize, n_randvecs, n_blocks) applied.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/getting_started.html","id":"key-parameters","dir":"Reference","previous_headings":"","what":"Key Parameters","title":"Simulated Dataset for Genome-Wide Interaction Analysis — getting_started","text":"Additive Heritability: 0.3 GxG Heritability: 0.25 Number Samples: 5000 Number SNPs: 6,000 Selected Additive SNPs: 100 Selected GxG SNP Groups: Group 1: 5 SNPs Group 2: 5 SNPs","code":""},{"path":[]},{"path":"https://lcrawlab.github.io/mmer/reference/getting_started.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Dataset for Genome-Wide Interaction Analysis — getting_started","text":"","code":"data(\"getting_started\") head(getting_started$summary) #> # A tibble: 6 × 9 #>   id     index chromosome position         p    pve     vc     se true_gxg_snp #>   <chr>  <int>      <int>    <int>     <dbl>  <dbl>  <dbl>  <dbl> <lgl>        #> 1 rs1498  1498          1     1498 0.000581  0.0447 0.0446 0.0137 TRUE         #> 2 rs2032  2032          1     2032 0.00722   0.0377 0.0377 0.0154 TRUE         #> 3 rs2364  2364          1     2364 0.00178   0.0450 0.0450 0.0154 TRUE         #> 4 rs2867  2867          1     2867 0.000496  0.0519 0.0518 0.0157 TRUE         #> 5 rs4610  4610          1     4610 0.0000783 0.0581 0.0580 0.0153 TRUE         #> 6 rs822    822          1      822 0.00522   0.0367 0.0367 0.0143 TRUE"},{"path":"https://lcrawlab.github.io/mmer/reference/mme.html","id":null,"dir":"Reference","previous_headings":"","what":"Multimodal Marginal Epistasis (MME) Test — mme","title":"Multimodal Marginal Epistasis (MME) Test — mme","text":"MME tests marginal epistasis incorporating functional data inform gene--gene interaction covariance matrix computational statistical efficiency.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/mme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multimodal Marginal Epistasis (MME) Test — mme","text":"","code":"mme(   plink_file,   pheno_file,   mask_file = NULL,   gxg_indices = NULL,   chunk_size = NULL,   n_randvecs = 10,   n_blocks = 100,   n_threads = 1,   gxg_h5_group = \"gxg\",   ld_h5_group = \"ld\",   rand_seed = -1,   log_level = \"WARNING\" )"},{"path":"https://lcrawlab.github.io/mmer/reference/mme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multimodal Marginal Epistasis (MME) Test — mme","text":"plink_file Character. File path PLINK dataset (without *.bed extension). function append .bim, .bed, .fam extensions automatically. pheno_file Character. File path phenotype file PLINK format. file contain exactly one phenotype column. mask_file Character NULL. File path HDF5 file specifying per-SNP masks gene--gene interaction tests. file informs SNPs tested marginal epistasis. Defaults NULL, indicating masking. Masking impacts scaling memory time. gxg_indices Integer vector NULL. List indices corresponding SNPs test marginal epistasis. NULL, SNPs dataset tested. indices 1-based. chunk_size Integer NULL. Number SNPs processed per chunk. influences memory usage can left NULL automatically determine chunk size based gxg_indices number threads. n_randvecs Integer. Number random vectors used stochastic trace estimation. Higher values yield accurate estimates increase computational cost. Default 10. n_blocks Integer. Number blocks SNPs divided processing. parameter affects memory requirements. Default 100. n_threads Integer. Number threads OpenMP parallel processing. Default 1. gxg_h5_group Character. Name HDF5 group within mask file containing gene--gene interaction masks. SNPs group included gene--gene interactions. Defaults \"gxg\". ld_h5_group Character. Name HDF5 group within mask file containing linkage disequilibrium masks. SNPs group excluded analysis. Defaults \"ld\". rand_seed Integer. Seed random vector generation. -1, seed set. Default -1. log_level Character. Logging level messages. Must uppercase (e.g., \"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\"). Default \"WARNING\".","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/mme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multimodal Marginal Epistasis (MME) Test — mme","text":"list containing: summary: tibble summarizing results tested SNP, including: id: Variant ID. index: Index SNP dataset. chromosome: Chromosome number. position: Genomic position SNP. p: P value gene--gene interaction test. pve: Proportion variance explained (PVE) gene--gene interactions. vc: Variance component estimate. se: Standard error variance component. pve: long-format tibble PVE variance components. vc_estimate: long-format tibble variance component estimates. vc_se: long-format tibble standard errors variance components. average_duration: Average computation time per SNP.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/mme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multimodal Marginal Epistasis (MME) Test — mme","text":"function integrates PLINK-formatted genotype phenotype data perform marginal epistasis tests set SNPs. Using stochastic trace estimation, method computes variance components gene--gene interaction genetic relatedness using MQS estimator. process parallelized using OpenMP n_threads > 1. memory requirements computation time scaling can optimized parameters chunk_size, n_randvecs, n_blocks. Mask Format Requirements mask file format HDF5 file used storing index data masking process. format supports data retrieval index. required groups datasets within HDF5 file: required group names can configured input parameters. defaults described . Groups: ld: Stores SNPs LD focal SNP. SNPs excluded. gxg: Stores indices SNPs marginal epistasis test conditioned . SNPs included. Datasets: ld/<j>: focal SNP <j>, dataset contains indices SNPs LD block SNP. SNPs excluded gene--gene interaction covariance matrix. gxg/<j>: focal SNP <j>, dataset contains indices SNPs include gene--gene interaction covariance matrix focal SNP <j>. Important: indices mask file data zero-based, matching zero-based indices PLINK .bim file.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/mme.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multimodal Marginal Epistasis (MME) Test — mme","text":"Stamp, J., DenAdel, ., Weinreich, D., & Crawford, L. (2023). Leveraging genetic correlation traits improves detection epistasis genome-wide association studies. G3: Genes, Genomes, Genetics, 13(8), jkad118. Crawford, L., Zeng, P., Mukherjee, S., & Zhou, X. (2017). Detecting epistasis marginal epistasis test genetic mapping studies quantitative traits. PLoS genetics, 13(7), e1006869.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/read_hdf5_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Dataset from an HDF5 File — read_hdf5_dataset","title":"Read Dataset from an HDF5 File — read_hdf5_dataset","text":"function reads dataset existing HDF5 file.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/read_hdf5_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Dataset from an HDF5 File — read_hdf5_dataset","text":"","code":"read_hdf5_dataset(file_name, dataset_name)"},{"path":"https://lcrawlab.github.io/mmer/reference/read_hdf5_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Dataset from an HDF5 File — read_hdf5_dataset","text":"file_name character string specifying path HDF5 file. dataset_name character string specifying name dataset within HDF5 file read.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/read_hdf5_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Dataset from an HDF5 File — read_hdf5_dataset","text":"content dataset HDF5 file, typically form R object.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/read_hdf5_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Dataset from an HDF5 File — read_hdf5_dataset","text":"","code":"if (FALSE) { # \\dontrun{ # Read a dataset named 'my_dataset' from an HDF5 file data <- read_hdf5_dataset(\"example.h5\", \"my_dataset\") } # }"},{"path":"https://lcrawlab.github.io/mmer/reference/simulate_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Quantitative Traits from PLINK Genotypes — simulate_traits","title":"Simulate Quantitative Traits from PLINK Genotypes — simulate_traits","text":"function simulates quantitative trait based additive epistatic genetic effects using genotype data PLINK dataset. simulated trait saved specified output file phenotype format compatible PLINK.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/simulate_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Quantitative Traits from PLINK Genotypes — simulate_traits","text":"","code":"simulate_traits(   plink_file,   output_file,   additive_heritability,   gxg_heritability,   additive_indices,   gxg_indices_1,   gxg_indices_2,   log_level = \"WARNING\" )"},{"path":"https://lcrawlab.github.io/mmer/reference/simulate_traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Quantitative Traits from PLINK Genotypes — simulate_traits","text":"plink_file Character. Path PLINK dataset (without file extension). function append .bed, .bim, .fam extensions needed. output_file Character. Path output file simulated trait saved. additive_heritability Numeric. value 0 1 specifying proportion trait variance due additive genetic effects. gxg_heritability Numeric. value 0 1 specifying proportion trait variance due gene--gene (epistatic) interactions. sum additive_heritability gxg_heritability must exceed 1. additive_indices Integer vector. Indices SNPs contributing additive genetic effects. gxg_indices_1 Integer vector. Indices SNPs first group epistatic interactions. gxg_indices_2 Integer vector. Indices SNPs second group epistatic interactions. log_level Character. Logging level messages (e.g., \"DEBUG\", \"INFO\", \"WARNING\"). Default \"WARNING\".","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/simulate_traits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Quantitative Traits from PLINK Genotypes — simulate_traits","text":"None. simulated trait written specified output_file.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/simulate_traits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Quantitative Traits from PLINK Genotypes — simulate_traits","text":"function uses following components simulate trait: Additive genetic effects: Determined additive_indices specified additive_heritability. Epistatic interactions: Simulated using pairs SNPs gxg_indices_1 gxg_indices_2, contributing gxg_heritability. Environmental effects: remaining variance explained genetic effects assigned random environmental noise. output file PLINK-compatible phenotype format three columns: Family ID (FID), Individual ID (IID), simulated trait (TRAIT).","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/write_hdf5_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Data to an HDF5 Dataset — write_hdf5_dataset","title":"Write Data to an HDF5 Dataset — write_hdf5_dataset","text":"function writes new data existing HDF5 file. dataset already exists, replaced new data.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/write_hdf5_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Data to an HDF5 Dataset — write_hdf5_dataset","text":"","code":"write_hdf5_dataset(file_name, dataset_name, new_data)"},{"path":"https://lcrawlab.github.io/mmer/reference/write_hdf5_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Data to an HDF5 Dataset — write_hdf5_dataset","text":"file_name character string specifying path HDF5 file. dataset_name character string specifying name dataset written HDF5 file. new_data new data write dataset. data must compatible dataset's structure.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/write_hdf5_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Data to an HDF5 Dataset — write_hdf5_dataset","text":"return value; function modifies specified dataset HDF5 file.","code":""},{"path":"https://lcrawlab.github.io/mmer/reference/write_hdf5_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Data to an HDF5 Dataset — write_hdf5_dataset","text":"","code":"if (FALSE) { # \\dontrun{ # Write new data to a dataset named 'my_dataset' in the HDF5 file write_hdf5_dataset(\"example.h5\", \"my_dataset\", new_data) } # }"}]
